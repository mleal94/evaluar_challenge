{
	"info": {
		"_postman_id": "7e98df34-e948-404e-b579-0f65d84904db",
		"name": "Evaluar Challange",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Person",
			"item": [
				{
					"name": "Add Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"name\", response.name);\r",
									"pm.collectionVariables.set(\"lastname\", response.lastname);\r",
									"pm.collectionVariables.set(\"gender\", response.gender);\r",
									"pm.collectionVariables.set(\"married\", response.married);\r",
									"pm.collectionVariables.set(\"age\", response.age);\r",
									"pm.collectionVariables.set(\"id\", response.id);\r",
									"\r",
									"pm.test(\"Check Response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.lastname).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.gender).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.married).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.age).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Mauricio\",\r\n    \"gender\":\"MALE\",\r\n    \"lastName\":\"Aguilar\",\r\n    \"married\":true,\r\n    \"age\":88\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8888/person",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"person"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Chseck update response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.lastName).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.gender).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.married).to.be.a(\"boolean\");\r",
									"    pm.expect(jsonData.age).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.ChildList).to.be.a(\"array\");\r",
									"    pm.expect(jsonData.createdAt).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.updatedAt).to.be.a(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\":\"98\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8888/person/{{id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"person",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Removed Succefull\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.equals(\"Person removed successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8888/person/{{id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"person",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Person Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Check Person Details\", function () {\r",
									"    pm.expect(response.id).to.be.a(\"number\");\r",
									"    pm.expect(response.name).to.be.a(\"string\");\r",
									"    pm.expect(response.lastName).to.be.a(\"string\");\r",
									"    pm.expect(response.gender).to.be.a(\"string\");\r",
									"    pm.expect(response.married).to.be.a(\"boolean\");\r",
									"    pm.expect(response.age).to.be.a(\"number\");\r",
									"    pm.expect(response.createdAt).to.be.a(\"string\");\r",
									"    pm.expect(response.updatedAt).to.be.a(\"string\");\r",
									"    if(response.ChildList.length){\r",
									"        response.ChildList.forEach((child)=>{\r",
									"            pm.expect(child.id).to.be.a(\"number\");\r",
									"            pm.expect(child.name).to.be.a(\"string\");\r",
									"            pm.expect(child.PersonId).to.be.a(\"number\");\r",
									"            pm.expect(child.createdAt).to.be.a(\"string\");\r",
									"            pm.expect(child.updatedAt).to.be.a(\"string\");\r",
									"        });\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8888/person/{{id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"person",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Person List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const persons = pm.response.json();\r",
									"\r",
									"/*persons.forEach((person)=>{\r",
									"    pm.expect(person.id).to.be.a(\"number\");\r",
									"    pm.expect(person.name).to.be.a(\"string\");\r",
									"    pm.expect(person.lastName).to.be.a(\"string\");\r",
									"    pm.expect(person.gender).to.be.a(\"string\");\r",
									"    pm.expect(person.married).to.be.a(\"boolean\");\r",
									"    pm.expect(person.age).to.be.a(\"number\");\r",
									"    pm.expect(person.childQuantity).to.be.a(\"number\");\r",
									"    pm.expect(person.createdAt).to.be.a(\"string\");\r",
									"    pm.expect(person.updatedAt).to.be.a(\"string\");\r",
									"})*/\r",
									"persons.forEach((person)=>{\r",
									"pm.test(\"Check Person List\", function () {\r",
									"    pm.expect(person.id).to.be.a(\"number\");\r",
									"    pm.expect(person.name).to.be.a(\"string\");\r",
									"    pm.expect(person.lastName).to.be.a(\"string\");\r",
									"    pm.expect(person.gender).to.be.a(\"string\");\r",
									"    pm.expect(person.married).to.be.a(\"boolean\");\r",
									"    pm.expect(person.age).to.be.a(\"number\");\r",
									"    pm.expect(person.childQuantity).to.be.a(\"number\");\r",
									"    pm.expect(person.createdAt).to.be.a(\"string\");\r",
									"    pm.expect(person.updatedAt).to.be.a(\"string\");\r",
									"});\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8888/person/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"person",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Child",
			"item": [
				{
					"name": "Add Child",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"childName\", response.name);\r",
									"pm.collectionVariables.set(\"childId\", response.id);\r",
									"pm.collectionVariables.set(\"PersonId\", response.PersonId);\r",
									"\r",
									"\r",
									"pm.test(\"Check Response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.PersonId).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mauro\",\r\n    \"PersonId\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8888/child",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"child"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Child",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Chseck update response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.PersonId).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.createdAt).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.updatedAt).to.be.a(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Muauuuu\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8888/child/{{childId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"child",
								"{{childId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Chilld",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Removed Succefull\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.equals(\"Child removed successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"MauDDD555ricio\",\r\n    \"gender\":\"MALE\",\r\n    \"lastName\":\"Leal\",\r\n    \"married\":true,\r\n    \"age\":\"87\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8888/child/{{childId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"child",
								"{{childId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Child Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Chseck update response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.PersonId).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.createdAt).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.updatedAt).to.be.a(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8888/child/{{childId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"child",
								"{{childId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Child List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const childs = pm.response.json();\r",
									"\r",
									"childs.forEach((child)=>{\r",
									"pm.test(\"Check Child List\", function () {\r",
									"    pm.expect(child.id).to.be.a(\"number\");\r",
									"    pm.expect(child.name).to.be.a(\"string\");\r",
									"    pm.expect(child.PersonId).to.be.a(\"number\");\r",
									"    pm.expect(child.createdAt).to.be.a(\"string\");\r",
									"    pm.expect(child.updatedAt).to.be.a(\"string\");\r",
									"});\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8888/child/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"child",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response =  pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.auth).to.string;\r",
									"    pm.expect(jsonData.token).to.string;\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"token\", response.token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@admin.admin\",\r\n    \"password\":\"123456.Abd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8888/users/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8888",
							"path": [
								"users",
								"auth"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "lastname",
			"value": ""
		},
		{
			"key": "gender",
			"value": ""
		},
		{
			"key": "married",
			"value": ""
		},
		{
			"key": "age",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "childName",
			"value": ""
		},
		{
			"key": "childId",
			"value": ""
		},
		{
			"key": "PersonId",
			"value": ""
		}
	]
}